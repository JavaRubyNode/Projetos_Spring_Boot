package com.vinicius.sangue.bean;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.format.annotation.NumberFormat;


@Entity
public class Doador implements Serializable {

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name="id")
	private long id;
	
	@NotEmpty(message ="Nome é obrigatório")
	@Size(max=20,message="O nome não pode ter mais que 20 caracteres")
	private String nome;
	
	
	@NotEmpty(message="Sobrenome é obrigatório")
	@Size(max=50, message="O sobrenome não pode ter mais que 50 caracteres")
	private String sobrenome;
	
	@NotEmpty(message="Email é obrigatório")
	@Size(max=30, message="O email não pode ter mais que 30 caracteres")
	@Pattern(regexp = "^[\\w\\-]+(\\.[\\w\\-]+)*@([A-Za-z0-9-]+\\.)+[A-Za-z]{2,4}$", 
	message="E-mail com formato incorreto.")
	private String email; 
	
	@NotNull(message="Idade é obrigatório")
	@NumberFormat(pattern="#,##0.00")
	private int idade;
	
	@NotEmpty(message="Telefone é obrigatório")
	@Size(max=12,message="O telefone não pode ter mais que 12 caracteres")
	@Pattern(regexp = "\\(?\\b([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})\\b", 
	message="Telefone em formato incorreto")
	private String telefone;
	
	private String cpf;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
